- hosts: all
  become: true
  gather_facts: false

  tasks:
      
    - name: Set timezone to Asia/Almaty
      community.general.timezone:
        name: Asia/Almaty  

    - name: First time extend fs
      command: touch /home/vagrant/.provisioned_fs
      register: firsttime_fs
      args:
        creates: /home/vagrant/.provisioned_fs
    
    - name: Extend File system to full disk
      shell: sudo resize2fs /dev/sda1
      when: firsttime_fs.changed

    - name: Update apt cache
      apt: 
        update_cache: yes
    
    - name: Install System Utilites
      apt: 
        name: ['mc', 'ca-certificates', 'curl', 'gnupg', 'lsb-release']
        state: present

    - name: Get Kubectl repository key 
      apt_key: 
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg 
        state: present    
        
    - name: Add Kubectl repository
      shell: echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list


    - name: Get Docker repository key 
      apt_key: 
        url: https://download.docker.com/linux/debian/gpg 
        state: present 
    
    - name: Add Docker repository
      shell: echo "deb https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Update apt cache
      apt: 
        update_cache: yes

    - name: Install Docker, Kubectl
      apt: 
        name: ['docker-ce', 'docker-ce-cli', 'containerd.io', 'kubectl']
        state: present
        
    - name: Config Docker Daemon
      template: 
        src: templates/daemon.json
        dest: /etc/docker/daemon.json
        
    - name: Create Docker group
      group:
        name: docker
        state: present
    
    - name: Adding user to group docker
      user:
        name: vagrant
        groups: docker
        append: yes
        
    - name: Ensure Docker service stoppped
      service: 
        name: "{{ item }}"
        state: stopped
      loop: 
        - "docker"
        - "containerd"    
        
    - name: Install minikube
      shell: curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && install minikube /usr/local/bin/    
      args: 
        creates: /usr/local/bin/minikube
        
    - name: Create a docker service directory if it does not exist
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory    
       
    - name: Config templates
      template: 
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      loop:
        - {src: "templates/daemon.json", dest: "/etc/docker/daemon.json"}
        - {src: "templates/override.conf", dest: "/etc/systemd/system/docker.service.d/override.conf"}
        - {src: "templates/minikube.service", dest: "/etc/systemd/system/minikube.service"}
    
    - name: Reload systemctl config
      shell: systemctl daemon-reload      
    
    - name: Ensure Docker service started
      service: 
        name: "{{ item }}"
        state: started
      loop: 
        - "docker"
        - "containerd"

    - name: First Start minikube
      shell: minikube start --vm-driver=docker
      become: true
      become_user: vagrant
      
    - name: Stop minikube
      shell: minikube stop
      become: true
      become_user: vagrant
    
    - name: Enable service minikube
      service:
         name: minikube
         enabled: yes
         state: started
        